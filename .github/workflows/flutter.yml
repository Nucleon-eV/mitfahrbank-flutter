name: Flutter CI

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # or: 'dev' or 'beta'
      - name: Install dependencies
        run: flutter packages get
      - name: Run tests
        run: flutter test
      
  analyze:
    runs-on: [ubuntu-latest]
    
    steps:
      - uses: actions/checkout@v2.0.0
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # or: 'dev' or 'beta'
      - name: Install dependencies
        run: flutter packages get
      - name: Run analyze
        run: flutter analyze
        
  build:
    runs-on: [ubuntu-latest]
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # or: 'dev' or 'beta'
      - name: Install dependencies
        run: flutter packages get
      - name: Run build
        run: flutter build apk -v --debug
      - name: Upload debug apk
        uses: actions/upload-artifact@v1
        with:
          name: app-debug.apk
          path: "build/app/outputs/apk/debug/app-debug.apk"

  visual_test:
    runs-on: [macos-latest]
    
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta' # or: 'dev' or 'beta'
      - name: Pod Repo update
        run: pod repo update
      - name: Install dependencies
        run: flutter packages get
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@0.0.1
      - name: Android Emulator Runner
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          script: flutter drive --target=test_driver/app.dart
